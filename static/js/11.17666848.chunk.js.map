{"version":3,"sources":["shared/components/ButtonCircularProgress.js","shared/components/HighlightedInformation.js","shared/functions/smoothScrollTop.js","shared/components/PropsRoute.js","shared/components/NavigationDrawer.js","shared/functions/shadeColor.js","shared/components/Bordered.js","logged_in/components/dashboard/Settings1.js","shared/components/HelpIcon.js","logged_in/components/dashboard/Settings2.js","logged_in/components/dashboard/SettingsArea.js","shared/components/EnhancedTableHead.js","shared/functions/stableSort.js","shared/functions/getSorting.js","shared/components/ConfirmationDialog.js","logged_in/components/dashboard/UserDataArea.js","logged_in/components/dashboard/AccountInformationArea.js","logged_in/components/dashboard/StatisticsArea.js","logged_in/components/dashboard/Dashboard.js","shared/components/VertOptions.js","shared/components/SelfAligningImage.js","logged_in/components/posts/PostContent.js","shared/components/ActionPaper.js","shared/components/ImageCropperDialog.js","logged_in/components/posts/AddPostOptions.js","logged_in/components/posts/AddPost.js","logged_in/components/posts/Posts.js","shared/components/ColorfulChip.js","shared/functions/unixToDateString.js","shared/functions/currencyPrettyPrint.js","logged_in/components/subscription/SubscriptionTable.js","logged_in/components/subscription/SubscriptionInfo.js","logged_in/components/subscription/Subscription.js","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/SideDrawer.js","logged_in/components/navigation/Balance.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/dummy_data/persons.js","logged_in/components/subscription/LazyLoadAddBalanceDialog.js","logged_in/components/Main.js"],"names":["withStyles","theme","circularProgress","color","palette","secondary","main","withTheme","props","size","classes","pl","display","thickness","className","backgroundColor","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","children","classNames","variant","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","PropsRoute","component","rest","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","withWidth","closeIcon","marginRight","headSection","width","blackList","common","black","height","noDecoration","textDecoration","open","onClose","anchor","menuItems","selectedItem","useEffect","onresize","isWidthUp","style","paddingTop","paddingBottom","justifyContent","disableGutters","onClick","aria-label","map","element","link","to","button","selected","name","disableRipple","disableTouchRipple","icon","primary","shadeColor","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","wrapper","borderColor","greyed","disableVerticalPadding","disableBorderRadius","paddingLeft","paddingRight","inputOptions","numberInput","numberInputInput","dBlock","listItemLeftPadding","accordionDetails","paddintTop","pushMessageToSnackbar","useState","isSaveLoading","setIsSaveLoading","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","useCallback","event","target","value","Error","resetState","onSetDefault","text","onSubmit","inputs","state","label","stateName","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","List","disablePadding","index","ListItem","divider","ListItemText","FormControl","ListItemSecondaryAction","Select","onChange","input","OutlinedInput","labelWidth","MenuProps","disableScrollLock","innerElement","MenuItem","type","inputProps","step","Box","mr","Button","disabled","ButtonCircularProgress","tooltipTypo","whiteSpace","typography","caption","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","Tooltip","enterTouchDelay","onFocus","onBlur","cursor","breakpoints","down","listItem","up","option7","setOption7","handleInputChange","handleCheckboxChange","checked","secondaryAction","Checkbox","helpText","length","SettingsArea","tableSortLabel","userSelect","noIcon","paddingFix","order","orderBy","rows","onRequestSort","createSortHandler","property","TableHead","TableRow","row","TableCell","align","numeric","sortDirection","placement","enterDelay","TableSortLabel","active","id","direction","stableSort","array","cmp","stabilizedThis","el","sort","a","b","desc","getSorting","ConfirmationDialog","loading","content","onConfirm","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","tableWrapper","overflowX","alignRight","flexDirection","alignItems","blackIcon","avatar","firstData","iconButton","dNone","targets","setTargets","setOrder","setOrderBy","page","setPage","isDeleteTargetDialogOpen","setIsDeleteTargetDialogOpen","deleteTargetDialogRow","setDeleteTargetDialogRow","isDeleteTargetLoading","setIsDeleteTargetLoading","handleRequestSort","__","_orderBy","_order","deleteTarget","_targets","findIndex","splice","handleChangePage","_","handleDeleteTargetDialogClose","handleDeleteTargetDialogOpen","toggleTarget","isActivated","Table","aria-labelledby","rowCount","TableBody","hover","tabIndex","scope","Avatar","src","profilePicUrl","number1","number2","number3","number4","IconButton","m","HighlightedInformation","TablePagination","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","select","selectIcon","actions","labelRowsPerPage","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","spin","animation","listItemSecondaryAction","toggleAccountActivation","isAccountActivated","Paper","Toolbar","ListItemIcon","Switch","CardChart","data","profit","views","Grid","container","item","xs","md","Dashboard","selectDashboard","statistics","mt","gutterBottom","UserDataArea","listItemtext","items","anchorEl","useRef","isOpen","setIsOpen","handleClose","handleOpen","buttonRef","aria-describedby","Popover","current","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","dense","imageContainer","overflow","position","image","top","bottom","left","right","margin","timeStamp","options","roundedBorder","img","hasMoreWidthThanHeight","setHasMoreWidthThanHeight","hasLoaded","setHasLoaded","onLoad","naturalHeight","naturalWidth","ref","alt","GridListTileBar","subtitle","format","Date","awareOfUnicodeTokens","actionIcon","setPosts","posts","openAddPostModal","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","deletePost","_posts","find","onDelete","printImageGrid","post","sm","timestamp","disableElevation","Divider","helpPadding","fullWidth","maxWidth","fullWidthActions","pt","values","root","pb","pr","action","dialogPaper","dialogContent","ImageCropper","onCrop","aspectRatio","crop","setCrop","getCropFunctionFromChild","cropFunction","onEscapeKeyDown","setCropFunction","floatButtonWrapper","zIndex","inputRoot","uploadIcon","imgWrapper","borderTopLeftRadius","uploadText","emojiTextArea","borderTopRightRadius","Dropzone","files","deleteItem","onDrop","EmojiTextArea","DateTimePicker","cropperFile","onCropperClose","uploadAt","onChangeUploadAt","printFile","preview","accept","fullHeight","paragraph","mb","inputClassName","maxCharacters","rightContent","emojiSet","disablePast","AddPost","setFiles","setUploadAt","setLoading","setCropperFile","acceptDrop","file","acceptedFiles","rejectedFiles","isErrorMessage","URL","createObjectURL","key","getTime","dataUrl","handleUpload","Posts","selectPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","closeAddPostModal","ColorfulChip","Chip","unixToDateString","unix","date","getDate","getMonth","getFullYear","currencyPrettyPrint","cents","toLocaleString","currency","blackBackground","contentWrapper","transactions","transaction","description","balanceChange","error","dark","paidUntil","openAddBalanceDialog","selectSubscription","Routing","path","Subscription","marginTop","marginBottom","memo","MessageListItem","message","hasErrorOccurred","setHasErrorOccurred","handleError","ListItemAvatar","onError","formatDistance","tabContainer","overflowY","maxHeight","popoverPaper","noShadow","boxShadow","messages","handleClick","handleClickAway","AppBar","styles","minWidth","Drawer","outlinedInput","balance","readOnly","appBar","shadows","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","smBordered","menuLink","iconListItem","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","username","justifyCenter","permanentDrawerListItem","selectedTab","links","isMobileOpen","setIsMobileOpen","isSideDrawerOpen","setIsSideDrawerOpen","openMobileDrawer","closeMobileDrawer","openDrawer","closeDrawer","desktop","mobile","Hidden","smUp","xsDown","process","node","click","NavigationDrawer","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","reason","pushMessage","push","Snackbar","disableWindowBlurListener","autoHideDuration","onExited","ContentProps","LazyLoadAddBalanceDialog","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","then","Component","default","shuffle","i","j","floor","random","Main","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setEmojiTextArea","hasFetchedEmojiTextArea","setHasFetchedEmojiTextArea","setImageCropper","hasFetchedImageCropper","setHasFetchedImageCropper","setDropzone","hasFetchedDropzone","setHasFetchedDropzone","setDateTimePicker","hasFetchedDateTimePicker","setHasFetchedDateTimePicker","setTransactions","setStatistics","setMessages","setIsAccountActivated","isAddBalanceDialogOpen","setIsAddBalanceDialogOpen","setPushMessageToSnackbar","fetchRandomTargets","randomPerson","persons","closeAddBalanceDialog","onPaymentSuccess","fetchRandomStatistics","oneYearSeconds","curProfit","curViews","curUnix","fetchRandomTransactions","oneMonthSeconds","transactionTemplates","isSubscription","randomTransactionTemplate","reverse","fetchRandomMessages","iterations","fetchRandomPosts","person","ConsecutiveSnackbarMessages"],"mappings":"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","file":"static/js/11.17666848.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  circularProgress: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n});\r\n\r\nfunction ButtonCircularProgress(props) {\r\n  const { size, classes } = props;\r\n  return (\r\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\r\n      <CircularProgress\r\n        size={size ? size : 24}\r\n        thickness={size ? (size / 5) * 24 : 5}\r\n        className={classes.circularProgress}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtonCircularProgress.propTypes = {\r\n  size: PropTypes.number,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: theme.palette.warning.light,\r\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography variant=\"body2\">{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]).isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","/**\r\n * When called scrolls smooth to the top of the page.\r\n * globLastC prevents shaky animations when scrolling to\r\n * bottom while topscrolling.\r\n */\r\nlet globLastC = Infinity;\r\n\r\nfunction smoothScrollTopRec() {\r\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n  if (c > 0 && globLastC > c) {\r\n    globLastC = c;\r\n    window.requestAnimationFrame(smoothScrollTopRec);\r\n    window.scrollTo(0, c - c / 8);\r\n  } else {\r\n    globLastC = Infinity;\r\n  }\r\n}\r\n\r\nfunction smoothScrollTop() {\r\n  /**\r\n   * Normally this gets called from componentDidMount()\r\n   * Not waiting a tiny fraction of time can lead\r\n   * to shaky behaviour\r\n   */\r\n  setTimeout(() => {\r\n    smoothScrollTopRec();\r\n  }, 10);\r\n}\r\n\r\nexport default smoothScrollTop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\n/**\r\n * Wrapper around the Router component, which makes it pass the properties\r\n * to it's child.\r\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\r\n */\r\nconst PropsRoute = ({ component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\r\n  />\r\n);\r\n\r\nPropsRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\r\n};\r\n\r\nexport default PropsRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  withStyles,\r\n  IconButton,\r\n  Typography,\r\n  withWidth,\r\n  isWidthUp,\r\n  Toolbar\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = theme => ({\r\n  closeIcon: {\r\n    marginRight: theme.spacing(0.5)\r\n  },\r\n  headSection: {\r\n    width: 200\r\n  },\r\n  blackList: {\r\n    backgroundColor: theme.palette.common.black,\r\n    height: \"100%\"\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\"\r\n  }\r\n});\r\n\r\nfunction NavigationDrawer(props) {\r\n  const {\r\n    width,\r\n    open,\r\n    onClose,\r\n    anchor,\r\n    classes,\r\n    menuItems,\r\n    selectedItem,\r\n    theme\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    window.onresize = () => {\r\n      if (isWidthUp(\"sm\", width) && open) {\r\n        onClose();\r\n      }\r\n    };\r\n  }, [width, open, onClose]);\r\n\r\n  return (\r\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\r\n      <Toolbar className={classes.headSection}>\r\n        <ListItem\r\n          style={{\r\n            paddingTop: theme.spacing(0),\r\n            paddingBottom: theme.spacing(0),\r\n            height: \"100%\",\r\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\r\n          }}\r\n          disableGutters\r\n        >\r\n          <ListItemIcon className={classes.closeIcon}>\r\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\r\n              <CloseIcon color=\"primary\" />\r\n            </IconButton>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </Toolbar>\r\n      <List className={classes.blackList}>\r\n        {menuItems.map(element => {\r\n          if (element.link) {\r\n            return (\r\n              <Link\r\n                key={element.name}\r\n                to={element.link}\r\n                className={classes.noDecoration}\r\n                onClick={onClose}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={selectedItem === element.name}\r\n                  /**\r\n                   * We disable ripple as it will make a weird animation\r\n                   * with primary and secondary color\r\n                   */\r\n                  disableRipple\r\n                  disableTouchRipple\r\n                >\r\n                  <ListItemIcon>{element.icon}</ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                        {element.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            );\r\n          }\r\n          return (\r\n            <ListItem button key={element.name} onClick={element.onClick}>\r\n              <ListItemIcon>{element.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                    {element.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigationDrawer.propTypes = {\r\n  anchor: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  selectedItem: PropTypes.string\r\n};\r\n\r\nexport default withWidth()(\r\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\r\n);\r\n","function shadeColor(color, percent) {\r\n  const f = parseInt(color.slice(1), 16);\r\n  const t = percent < 0 ? 0 : 255;\r\n  const p = percent < 0 ? percent * -1 : percent;\r\n  const R = f >> 16;\r\n  const G = (f >> 8) & 0x00ff;\r\n  const B = f & 0x0000ff;\r\n  return `#${(\r\n    0x1000000 +\r\n    (Math.round((t - R) * p) + R) * 0x10000 +\r\n    (Math.round((t - G) * p) + G) * 0x100 +\r\n    (Math.round((t - B) * p) + B)\r\n  )\r\n    .toString(16)\r\n    .slice(1)}`;\r\n}\r\n\r\nexport default shadeColor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\r\n  },\r\n  greyed: {\r\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\r\n  }\r\n});\r\n\r\nfunction Bordered(props) {\r\n  const {\r\n    classes,\r\n    theme,\r\n    disableVerticalPadding,\r\n    disableBorderRadius,\r\n    children,\r\n    variant\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\r\n      style={{\r\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nBordered.propTypes = {\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  disableVerticalPadding: PropTypes.bool,\r\n  disableBorderRadius: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.array\r\n  ]),\r\n  variant: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Bordered);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  AccordionDetails,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  dBlock: { display: \"block\" },\r\n  listItemLeftPadding: {\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  accordionDetails: {\r\n    paddintTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction Settings1(props) {\r\n  const { classes, pushMessageToSnackbar } = props;\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n  const [option5, setOption5] = useState(\"2 Days\");\r\n  const [option6, setOption6] = useState(7500);\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      if (name === \"option6\") {\r\n        if (value > 7500 || value < 1000) {\r\n          return;\r\n        }\r\n      }\r\n      switch (name) {\r\n        case \"option1\": {\r\n          setOption1(value);\r\n          break;\r\n        }\r\n        case \"option2\": {\r\n          setOption2(value);\r\n          break;\r\n        }\r\n        case \"option3\": {\r\n          setOption3(value);\r\n          break;\r\n        }\r\n        case \"option4\": {\r\n          setOption4(value);\r\n          break;\r\n        }\r\n        case \"option5\": {\r\n          setOption5(value);\r\n          break;\r\n        }\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\r\n  );\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsSaveLoading(false);\r\n    setIsDefaultLoading(false);\r\n    setOption1(\"None\");\r\n    setOption2(\"None\");\r\n    setOption3(\"None\");\r\n    setOption4(\"None\");\r\n    setOption5(\"2 Days\");\r\n    setOption6(7500);\r\n  }, [\r\n    setIsSaveLoading,\r\n    setIsDefaultLoading,\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n  ]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\r\n\r\n  const inputs = [\r\n    {\r\n      state: option1,\r\n      label: \"Option 1\",\r\n      stateName: \"option1\",\r\n    },\r\n    {\r\n      state: option2,\r\n      label: \"Option 2\",\r\n      stateName: \"option2\",\r\n    },\r\n    {\r\n      state: option3,\r\n      label: \"Option 3\",\r\n      stateName: \"option3\",\r\n    },\r\n    {\r\n      state: option4,\r\n      label: \"Option 4\",\r\n      stateName: \"option4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 1</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                className=\"listItemLeftPadding\"\r\n                disableGutters\r\n                divider\r\n                key={index}\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">{element.label}</Typography>\r\n                </ListItemText>\r\n                <FormControl variant=\"outlined\">\r\n                  <ListItemSecondaryAction\r\n                    className={classes.ListItemSecondaryAction}\r\n                  >\r\n                    <Select\r\n                      value={element.state}\r\n                      onChange={handleChange}\r\n                      input={\r\n                        <OutlinedInput\r\n                          name={element.stateName}\r\n                          labelWidth={0}\r\n                          className={classes.numberInput}\r\n                          classes={{ input: classes.numberInputInput }}\r\n                        />\r\n                      }\r\n                      MenuProps={{ disableScrollLock: true }}\r\n                    >\r\n                      {inputOptions.map((innerElement) => (\r\n                        <MenuItem value={innerElement} key={innerElement}>\r\n                          {innerElement}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </ListItemSecondaryAction>\r\n                </FormControl>\r\n              </ListItem>\r\n            ))}\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 5</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <Select\r\n                    value={option5}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name=\"option5\"\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {[\r\n                      \"Always\",\r\n                      \"6 Hours\",\r\n                      \"12 Hours\",\r\n                      \"1 Day\",\r\n                      \"2 Days\",\r\n                      \"3 Days\",\r\n                      \"1 Week\",\r\n                    ].map((element) => (\r\n                      <MenuItem value={element} key={element}>\r\n                        {element}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 6</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <OutlinedInput\r\n                    labelWidth={0}\r\n                    name=\"option6\"\r\n                    value={option6}\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    className={classes.numberInput}\r\n                    classes={{ input: classes.numberInputInput }}\r\n                    inputProps={{ step: 20 }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n          onClick={onSubmit}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings1.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(Settings1));\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\r\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst styles = theme => ({\r\n  tooltipTypo: {\r\n    whiteSpace: \"pre-line !important\",\r\n    ...theme.typography.caption,\r\n    color: theme.palette.common.white\r\n  },\r\n  tooltip: {\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"1.25rem\"\r\n  },\r\n  helpIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    \"@media (max-width: 350px)\": {\r\n      marginLeft: theme.spacing(0.5)\r\n    },\r\n    transition: theme.transitions.create([\"color\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut\r\n    })\r\n  }\r\n});\r\n\r\nfunction HelpIcon(props) {\r\n  const { classes, title } = props;\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const onMouseOver = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\r\n          {title}\r\n        </Typography>\r\n      }\r\n      className={classes.tooltip}\r\n      enterTouchDelay={300}\r\n    >\r\n      <HelpIconOutline\r\n        /**\r\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\r\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\r\n         * */\r\n        onMouseOver={onMouseOver}\r\n        onFocus={onMouseOver}\r\n        onBlur={onMouseLeave}\r\n        onMouseLeave={onMouseLeave}\r\n        color={isHovered ? \"primary\" : \"inherit\"}\r\n        className={classes.helpIcon}\r\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nHelpIcon.propTypes = {\r\n  classes: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Checkbox,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 120,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 80,\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      width: 65,\r\n    },\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 14.5px\",\r\n    \"@media (max-width: 380px)\": {\r\n      padding: \"9px 8.5px\",\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      padding: \"9px 6.5px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    paddingLeft: 100,\r\n  },\r\n  AccordionDetails: {\r\n    paddingTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nfunction Settings2(props) {\r\n  const { pushMessageToSnackbar, classes } = props;\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [option1, setOption1] = useState(false);\r\n  const [option2, setOption2] = useState(false);\r\n  const [option3, setOption3] = useState(false);\r\n  const [option4, setOption4] = useState(false);\r\n  const [option5, setOption5] = useState(false);\r\n  const [option6, setOption6] = useState(\"Both\");\r\n  const [option7, setOption7] = useState(\"2 weeks\");\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsDefaultLoading(false);\r\n    setIsSaveLoading(false);\r\n    setOption1(false);\r\n    setOption2(false);\r\n    setOption3(false);\r\n    setOption4(false);\r\n    setOption5(false);\r\n    setOption6(\"Both\");\r\n    setOption7(\"2 weeks\");\r\n  }, [\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n    setOption7,\r\n  ]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, setIsSaveLoading]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState, setIsDefaultLoading]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        case \"option7\": {\r\n          setOption7(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement\");\r\n      }\r\n    },\r\n    [setOption6, setOption7]\r\n  );\r\n\r\n  const handleCheckboxChange = (name) => (event) => {\r\n    switch (name) {\r\n      case \"option1\":\r\n        setOption1(event.target.checked);\r\n        break;\r\n      case \"option2\":\r\n        setOption2(event.target.checked);\r\n        break;\r\n      case \"option3\":\r\n        setOption3(event.target.checked);\r\n        break;\r\n      case \"option4\":\r\n        setOption4(event.target.checked);\r\n        break;\r\n      case \"option5\":\r\n        setOption5(event.target.checked);\r\n        break;\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement.\");\r\n    }\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      title: \"Option 1\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option1\"\r\n          color=\"primary\"\r\n          checked={option1}\r\n          onChange={handleCheckboxChange(\"option1\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 2\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option2\"\r\n          color=\"primary\"\r\n          checked={option2}\r\n          onChange={handleCheckboxChange(\"option2\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 3\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option3\"\r\n          color=\"primary\"\r\n          checked={option3}\r\n          onChange={handleCheckboxChange(\"option3\")}\r\n        />\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 4\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option4\"\r\n          color=\"primary\"\r\n          checked={option4}\r\n          onChange={handleCheckboxChange(\"option4\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 5\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option5\"\r\n          color=\"primary\"\r\n          checked={option5}\r\n          onChange={handleCheckboxChange(\"option5\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 6\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option6}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option6\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"Both\">Both</MenuItem>\r\n          <MenuItem value=\"Male+\">Male+</MenuItem>\r\n          <MenuItem value=\"Female+\">Female+</MenuItem>\r\n          <MenuItem value=\"Only male\">Only male</MenuItem>\r\n          <MenuItem value=\"Only female\">Only female</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 7\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option7}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option7\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"None\">None</MenuItem>\r\n          <MenuItem value=\"6 hours\">6 hours</MenuItem>\r\n          <MenuItem value=\"12 hours\">12 hours</MenuItem>\r\n          <MenuItem value=\"1 day\">1 day</MenuItem>\r\n          <MenuItem value=\"3 days\">3 days</MenuItem>\r\n          <MenuItem value=\"1 week\">1 week</MenuItem>\r\n          <MenuItem value=\"2 weeks\">2 weeks</MenuItem>\r\n          <MenuItem value=\"1 month\">1 month</MenuItem>\r\n          <MenuItem value=\"3 months\">3 months</MenuItem>\r\n          <MenuItem value=\"6 months\">6 months</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 2</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                key={index}\r\n                divider={index !== inputs.length - 1}\r\n                className=\"listItemLeftPadding\"\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">\r\n                    {element.title}\r\n                    {element.helpText && <HelpIcon title={element.helpText} />}\r\n                  </Typography>\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                  <FormControl variant=\"outlined\">\r\n                    {element.secondaryAction}\r\n                  </FormControl>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.AccordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={onSubmit}\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings2.propTypes = {\r\n  classes: PropTypes.object,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Settings2);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Settings1 from \"./Settings1\";\r\nimport Settings2 from \"./Settings2\";\r\n\r\nfunction SettingsArea(props) {\r\n  const { pushMessageToSnackbar } = props;\r\n  return (\r\n    <Fragment>\r\n      <Settings1 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <Settings2 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSettingsArea.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func\r\n};\r\n\r\nexport default SettingsArea;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Typography,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  tableSortLabel: {\r\n    cursor: \"text\",\r\n    userSelect: \"auto\",\r\n    color: \"inherit !important\"\r\n  },\r\n  noIcon: {\r\n    \"& path\": {\r\n      display: \"none !important\"\r\n    }\r\n  },\r\n  paddingFix: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, rows, onRequestSort, classes } = props;\r\n\r\n  const createSortHandler = useCallback(\r\n    property => event => {\r\n      onRequestSort(event, property);\r\n    },\r\n    [onRequestSort]\r\n  );\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {rows.map((row, index) => (\r\n          <TableCell\r\n            key={index}\r\n            align={row.numeric ? \"right\" : \"inherit\"}\r\n            padding=\"default\"\r\n            sortDirection={orderBy === row.name ? order : false}\r\n            className={index === 0 ? classes.paddingFix : null}\r\n          >\r\n            {onRequestSort ? (\r\n              <Tooltip\r\n                title=\"Sort\"\r\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                enterDelay={300}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row.id)}\r\n                >\r\n                  <Typography variant=\"body2\">{row.label}</Typography>\r\n                </TableSortLabel>\r\n              </Tooltip>\r\n            ) : (\r\n              <TableSortLabel\r\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\r\n              >\r\n                <Typography variant=\"body2\" className={classes.label}>\r\n                  {row.label}\r\n                </Typography>\r\n              </TableSortLabel>\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func,\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\r\n","function stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\nexport default stableSort;\r\n","function desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\nexport default getSorting;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\n\r\nfunction ConfirmationDialog(props) {\r\n  const { open, onClose, loading, title, content, onConfirm } = props;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick={loading}\r\n      disableEscapeKeyDown={loading}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{content}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} disabled={loading}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={onConfirm}\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n        >\r\n          Yes {loading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  onConfirm: PropTypes.func\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TablePagination,\r\n  TableRow,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport PlayCirlceOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\r\nimport stableSort from \"../../../shared/functions/stableSort\";\r\nimport getSorting from \"../../../shared/functions/getSorting\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  alignRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  blackIcon: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  avatar: {\r\n    width: 28,\r\n    height: 28,\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  iconButton: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst rows = [\r\n  {\r\n    id: \"icon\",\r\n    numeric: true,\r\n    label: \"\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"number1\", numeric: false, label: \"Category 1\" },\r\n  { id: \"number2\", numeric: false, label: \"Category 2\" },\r\n  { id: \"number3\", numeric: false, label: \"Category 3\" },\r\n  {\r\n    id: \"number4\",\r\n    numeric: false,\r\n    label: \"Category 4\",\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    numeric: false,\r\n    label: \"\",\r\n  },\r\n];\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction CustomTable(props) {\r\n  const { pushMessageToSnackbar, classes, targets, setTargets } = props;\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [isDeleteTargetDialogOpen, setIsDeleteTargetDialogOpen] = useState(\r\n    false\r\n  );\r\n  const [deleteTargetDialogRow, setDeleteTargetDialogRow] = useState(null);\r\n  const [isDeleteTargetLoading, setIsDeleteTargetLoading] = useState(false);\r\n\r\n  const handleRequestSort = useCallback(\r\n    (__, property) => {\r\n      const _orderBy = property;\r\n      let _order = \"desc\";\r\n      if (orderBy === property && order === \"desc\") {\r\n        _order = \"asc\";\r\n      }\r\n      setOrder(_order);\r\n      setOrderBy(_orderBy);\r\n    },\r\n    [setOrder, setOrderBy, order, orderBy]\r\n  );\r\n\r\n  const deleteTarget = useCallback(() => {\r\n    setIsDeleteTargetLoading(true);\r\n    setTimeout(() => {\r\n      setIsDeleteTargetDialogOpen(false);\r\n      setIsDeleteTargetLoading(false);\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex(\r\n        (element) => element.id === deleteTargetDialogRow.id\r\n      );\r\n      _targets.splice(index, 1);\r\n      setTargets(_targets);\r\n      pushMessageToSnackbar({\r\n        text: \"Your friend has been removed\",\r\n      });\r\n    }, 1500);\r\n  }, [\r\n    setIsDeleteTargetDialogOpen,\r\n    setIsDeleteTargetLoading,\r\n    pushMessageToSnackbar,\r\n    setTargets,\r\n    deleteTargetDialogRow,\r\n    targets,\r\n  ]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const handleDeleteTargetDialogClose = useCallback(() => {\r\n    setIsDeleteTargetDialogOpen(false);\r\n  }, [setIsDeleteTargetDialogOpen]);\r\n\r\n  const handleDeleteTargetDialogOpen = useCallback(\r\n    (row) => {\r\n      setIsDeleteTargetDialogOpen(true);\r\n      setDeleteTargetDialogRow(row);\r\n    },\r\n    [setIsDeleteTargetDialogOpen, setDeleteTargetDialogRow]\r\n  );\r\n\r\n  const toggleTarget = useCallback(\r\n    (row) => {\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex((element) => element.id === row.id);\r\n      row.isActivated = !row.isActivated;\r\n      _targets[index] = row;\r\n      if (row.isActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now activated\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now deactivated\",\r\n        });\r\n      }\r\n      setTargets(_targets);\r\n    },\r\n    [pushMessageToSnackbar, targets, setTargets]\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Some user data</Typography>\r\n      </AccordionSummary>\r\n      <ConfirmationDialog\r\n        open={isDeleteTargetDialogOpen}\r\n        title=\"Confirmation\"\r\n        content={\r\n          deleteTargetDialogRow ? (\r\n            <span>\r\n              {\"Do you really want to remove the friend \"}\r\n              <b>{deleteTargetDialogRow.name}</b>\r\n              {\" from your list?\"}\r\n            </span>\r\n          ) : null\r\n        }\r\n        onClose={handleDeleteTargetDialogClose}\r\n        onConfirm={deleteTarget}\r\n        loading={isDeleteTargetLoading}\r\n      />\r\n      <Box width=\"100%\">\r\n        <div className={classes.tableWrapper}>\r\n          {targets.length > 0 ? (\r\n            <Table aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={targets.length}\r\n                rows={rows}\r\n              />\r\n              <TableBody>\r\n                {stableSort(targets, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => (\r\n                    <TableRow hover tabIndex={-1} key={index}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        className={classes.firstData}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={row.profilePicUrl}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number1}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number2}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number3}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number4}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                          {row.isActivated ? (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Pause\"\r\n                            >\r\n                              <PauseCircleOutlineIcon\r\n                                className={classes.blackIcon}\r\n                              />\r\n                            </IconButton>\r\n                          ) : (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Resume\"\r\n                            >\r\n                              <PlayCirlceOutlineIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            className={classes.iconButton}\r\n                            onClick={() => {\r\n                              handleDeleteTargetDialogOpen(row);\r\n                            }}\r\n                            aria-label=\"Delete\"\r\n                          >\r\n                            <DeleteIcon className={classes.blackIcon} />\r\n                          </IconButton>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Box m={2}>\r\n              <HighlightedInformation>\r\n                No friends added yet.\r\n              </HighlightedInformation>\r\n            </Box>\r\n          )}\r\n        </div>\r\n        <div className={classes.alignRight}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={targets.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\",\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\",\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            classes={{\r\n              select: classes.dNone,\r\n              selectIcon: classes.dNone,\r\n              actions: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n              caption: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n            }}\r\n            labelRowsPerPage=\"\"\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CustomTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Paper,\r\n  Toolbar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  ListItemIcon,\r\n  Switch,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  },\r\n  toolbar: { justifyContent: \"space-between\" },\r\n  scaleMinus: {\r\n    transform: \"scaleX(-1)\"\r\n  },\r\n  \"@keyframes spin\": {\r\n    from: { transform: \"rotate(359deg)\" },\r\n    to: { transform: \"rotate(0deg)\" }\r\n  },\r\n  spin: { animation: \"$spin 2s infinite linear\" },\r\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\r\n});\r\n\r\nfunction AccountInformationArea(props) {\r\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={2}>\r\n            <ListItemText\r\n              primary=\"Status\"\r\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\r\n              className=\"mr-2\"\r\n            />\r\n          </Box>\r\n          <ListItemIcon>\r\n            <LoopIcon\r\n              className={classNames(\r\n                isAccountActivated ? classes.spin : null,\r\n                classes.scaleMinus\r\n              )}\r\n            />\r\n          </ListItemIcon>\r\n        </Box>\r\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\r\n          <Switch\r\n            color=\"secondary\"\r\n            checked={isAccountActivated}\r\n            onClick={toggleAccountActivation}\r\n            inputProps={{\r\n              \"aria-label\": isAccountActivated\r\n                ? \"Deactivate Account\"\r\n                : \"Activate Account\"\r\n            }}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </Toolbar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nAccountInformationArea.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, withTheme } from \"@material-ui/core\";\r\n\r\nfunction StatisticsArea(props) {\r\n  const { theme, CardChart, data } = props;\r\n  return (\r\n    CardChart &&\r\n    data.profit.length >= 2 &&\r\n    data.views.length >= 2 && (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.profit}\r\n            color={theme.palette.secondary.light}\r\n            height=\"70px\"\r\n            title=\"Profit\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.views}\r\n            color={theme.palette.primary.light}\r\n            height=\"70px\"\r\n            title=\"Views\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nStatisticsArea.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  CardChart: PropTypes.elementType\r\n};\r\n\r\nexport default withTheme(StatisticsArea);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport SettingsArea from \"./SettingsArea\";\r\nimport UserDataArea from \"./UserDataArea\";\r\nimport AccountInformationArea from \"./AccountInformationArea\";\r\nimport StatisticsArea from \"./StatisticsArea\";\r\n\r\nfunction Dashboard(props) {\r\n  const {\r\n    selectDashboard,\r\n    CardChart,\r\n    statistics,\r\n    toggleAccountActivation,\r\n    pushMessageToSnackbar,\r\n    targets,\r\n    setTargets,\r\n    isAccountActivated,\r\n  } = props;\r\n\r\n  useEffect(selectDashboard, [selectDashboard]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <StatisticsArea CardChart={CardChart} data={statistics} />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Your Account\r\n        </Typography>\r\n      </Box>\r\n      <AccountInformationArea\r\n        isAccountActivated={isAccountActivated}\r\n        toggleAccountActivation={toggleAccountActivation}\r\n      />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Settings\r\n        </Typography>\r\n      </Box>\r\n      <SettingsArea pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <UserDataArea\r\n        pushMessageToSnackbar={pushMessageToSnackbar}\r\n        targets={targets}\r\n        setTargets={setTargets}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useState, useCallback, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  MenuList,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  MenuItem,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst styles = {\r\n  listItemtext: {\r\n    paddingLeft: \"0 !important\",\r\n  },\r\n};\r\n\r\nfunction VertOptions(props) {\r\n  const { items, classes, color } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleOpen}\r\n        buttonRef={anchorEl}\r\n        style={{ color: color ? color : null }}\r\n        aria-describedby={id}\r\n        aria-label=\"More Options\"\r\n      >\r\n        <MoreVertIcon style={{ color: color ? color : null }} />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        onClose={handleClose}\r\n        disableScrollLock\r\n      >\r\n        <MenuList dense>\r\n          {items.map((item) => (\r\n            <MenuItem\r\n              key={item.name}\r\n              onClick={() => {\r\n                handleClose();\r\n                item.onClick();\r\n              }}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText className={classes.listItemtext}>\r\n                {item.name}\r\n              </ListItemText>\r\n            </MenuItem>\r\n          ))}\r\n        </MenuList>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nVertOptions.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(VertOptions);\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport format from \"date-fns/format\";\r\nimport { GridListTileBar, withStyles } from \"@material-ui/core\";\r\nimport VertOptions from \"./VertOptions\";\r\n\r\nconst styles = {\r\n  imageContainer: {\r\n    width: \"100%\",\r\n    paddingTop: \"100%\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nfunction SelfAligningImage(props) {\r\n  const {\r\n    classes,\r\n    src,\r\n    title,\r\n    timeStamp,\r\n    options,\r\n    roundedBorder,\r\n    theme,\r\n  } = props;\r\n  const img = useRef();\r\n  const [hasMoreWidthThanHeight, setHasMoreWidthThanHeight] = useState(null);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n  const onLoad = useCallback(() => {\r\n    if (img.current.naturalHeight < img.current.naturalWidth) {\r\n      setHasMoreWidthThanHeight(true);\r\n    } else {\r\n      setHasMoreWidthThanHeight(false);\r\n    }\r\n    setHasLoaded(true);\r\n  }, [img, setHasLoaded, setHasMoreWidthThanHeight]);\r\n\r\n  return (\r\n    <div className={classes.imageContainer}>\r\n      <img\r\n        style={{\r\n          height: hasMoreWidthThanHeight ? \"100%\" : \"auto\",\r\n          width: hasMoreWidthThanHeight ? \"auto\" : \"100%\",\r\n          display: hasLoaded ? \"block\" : \"none\",\r\n          borderRadius: roundedBorder ? theme.shape.borderRadius : 0,\r\n        }}\r\n        ref={img}\r\n        className={classes.image}\r\n        onLoad={onLoad}\r\n        src={src}\r\n        alt=\"\"\r\n      />\r\n      {title && (\r\n        <GridListTileBar\r\n          title={title}\r\n          subtitle={format(new Date(timeStamp * 1000), \"PP - k:mm\", {\r\n            awareOfUnicodeTokens: true,\r\n          })}\r\n          actionIcon={\r\n            options.length > 0 && (\r\n              <VertOptions color={theme.palette.common.white} items={options} />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelfAligningImage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  title: PropTypes.string,\r\n  timeStamp: PropTypes.number,\r\n  roundedBorder: PropTypes.bool,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SelfAligningImage);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  TablePagination,\r\n  Divider,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SelfAligningImage from \"../../../shared/components/SelfAligningImage\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = {\r\n  dBlock: { display: \"block\" },\r\n  dNone: { display: \"none\" },\r\n  toolbar: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction PostContent(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    setPosts,\r\n    posts,\r\n    openAddPostModal,\r\n    classes,\r\n  } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\r\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\r\n    false\r\n  );\r\n\r\n  const closeDeletePostDialog = useCallback(() => {\r\n    setIsDeletePostDialogOpen(false);\r\n    setIsDeletePostDialogLoading(false);\r\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\r\n\r\n  const deletePost = useCallback(() => {\r\n    setIsDeletePostDialogLoading(true);\r\n    setTimeout(() => {\r\n      const _posts = [...posts];\r\n      const index = _posts.find((element) => element.id === deletePost.id);\r\n      _posts.splice(index, 1);\r\n      setPosts(_posts);\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been deleted\",\r\n      });\r\n      closeDeletePostDialog();\r\n    }, 1500);\r\n  }, [\r\n    posts,\r\n    setPosts,\r\n    setIsDeletePostDialogLoading,\r\n    pushMessageToSnackbar,\r\n    closeDeletePostDialog,\r\n  ]);\r\n\r\n  const onDelete = useCallback(() => {\r\n    setIsDeletePostDialogOpen(true);\r\n  }, [setIsDeletePostDialogOpen]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (__, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const printImageGrid = useCallback(() => {\r\n    if (posts.length > 0) {\r\n      return (\r\n        <Box p={1}>\r\n          <Grid container spacing={1}>\r\n            {posts\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((post) => (\r\n                <Grid item xs={6} sm={4} md={3} key={post.id}>\r\n                  <SelfAligningImage\r\n                    src={post.src}\r\n                    title={post.name}\r\n                    timeStamp={post.timestamp}\r\n                    options={[\r\n                      {\r\n                        name: \"Delete\",\r\n                        onClick: () => {\r\n                          onDelete(post);\r\n                        },\r\n                        icon: <DeleteIcon />,\r\n                      },\r\n                    ]}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box m={2}>\r\n        <HighlightedInformation>\r\n          No posts added yet. Click on &quot;NEW&quot; to create your first one.\r\n        </HighlightedInformation>\r\n      </Box>\r\n    );\r\n  }, [posts, onDelete, page]);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant=\"h6\">Your Posts</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={openAddPostModal}\r\n          disableElevation\r\n        >\r\n          Add Post\r\n        </Button>\r\n      </Toolbar>\r\n      <Divider />\r\n      {printImageGrid()}\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={posts.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"Previous Page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"Next Page\",\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        classes={{\r\n          select: classes.dNone,\r\n          selectIcon: classes.dNone,\r\n          actions: posts.length > 0 ? classes.dBlock : classes.dNone,\r\n          caption: posts.length > 0 ? classes.dBlock : classes.dNone,\r\n        }}\r\n        labelRowsPerPage=\"\"\r\n      />\r\n      <ConfirmationDialog\r\n        open={isDeletePostDialogOpen}\r\n        title=\"Confirmation\"\r\n        content=\"Do you really want to delete the post?\"\r\n        onClose={closeDeletePostDialog}\r\n        loading={isDeletePostDialogLoading}\r\n        onConfirm={deletePost}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nPostContent.propTypes = {\r\n  openAddPostModal: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(PostContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  helpPadding: {\r\n    \"@media (max-width:  400px)\": {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    }\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nfunction ActionPaper(props) {\r\n  const {\r\n    theme,\r\n    classes,\r\n    title,\r\n    content,\r\n    maxWidth,\r\n    actions,\r\n    helpPadding,\r\n    fullWidthActions\r\n  } = props;\r\n  return (\r\n    <Box pt={1}>\r\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth] }}>\r\n        {title && <DialogTitle>{title}</DialogTitle>}\r\n        {content && (\r\n          <DialogContent\r\n            classes={helpPadding ? { root: classes.helpPadding } : null}\r\n          >\r\n            {content}\r\n          </DialogContent>\r\n        )}\r\n        {actions && (\r\n          <Box pb={2} pr={2}>\r\n            <DialogActions\r\n              classes={{ action: fullWidthActions ? classes.fullWidth : null }}\r\n            >\r\n              {actions}\r\n            </DialogActions>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nActionPaper.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.string\r\n  ]),\r\n  content: PropTypes.element,\r\n  maxWidth: PropTypes.string,\r\n  actions: PropTypes.element,\r\n  helpPadding: PropTypes.bool,\r\n  fullWidthActions: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  dialogPaper: { maxWidth: `${theme.breakpoints.values.md}px !important` },\r\n  dialogContent: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction ImageCropperDialog(props) {\r\n  const {\r\n    ImageCropper,\r\n    classes,\r\n    onClose,\r\n    open,\r\n    src,\r\n    onCrop,\r\n    aspectRatio,\r\n    theme,\r\n  } = props;\r\n  const [crop, setCrop] = useState(null);\r\n\r\n  const getCropFunctionFromChild = useCallback(\r\n    (cropFunction) => {\r\n      setCrop(() => cropFunction);\r\n    },\r\n    [setCrop]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onEscapeKeyDown={onClose}\r\n      classes={{ paper: classes.dialogPaper }}\r\n      style={{ overflowX: \"visible\" }}\r\n    >\r\n      <DialogContent className={classes.dialogContent}>\r\n        <ImageCropper\r\n          src={src}\r\n          setCropFunction={getCropFunctionFromChild}\r\n          onCrop={onCrop}\r\n          aspectRatio={aspectRatio}\r\n          color={theme.palette.primary.main}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Box mr={1}>\r\n          <Button onClick={onClose}>Close</Button>\r\n        </Box>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={crop}>\r\n          Crop\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nImageCropperDialog.propTypes = {\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onCrop: PropTypes.func.isRequired,\r\n  src: PropTypes.string,\r\n  aspectRatio: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImageCropperDialog);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  floatButtonWrapper: {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n    zIndex: 1000,\r\n  },\r\n  inputRoot: {\r\n    width: 190,\r\n    \"@media (max-width:  400px)\": {\r\n      width: 160,\r\n    },\r\n    \"@media (max-width:  360px)\": {\r\n      width: 140,\r\n    },\r\n    \"@media (max-width:  340px)\": {\r\n      width: 120,\r\n    },\r\n  },\r\n  uploadIcon: {\r\n    fontSize: 48,\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  imgWrapper: { position: \"relative\" },\r\n  img: {\r\n    width: \"100%\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n  uploadText: {\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  emojiTextArea: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    marginRight: -1,\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction AddPostOptions(props) {\r\n  const {\r\n    Dropzone,\r\n    classes,\r\n    files,\r\n    deleteItem,\r\n    onDrop,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    DateTimePicker,\r\n    cropperFile,\r\n    onCrop,\r\n    onCropperClose,\r\n    uploadAt,\r\n    onChangeUploadAt,\r\n  } = props;\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option1\":\r\n          setOption1(value);\r\n          break;\r\n        case \"option2\":\r\n          setOption2(value);\r\n          break;\r\n        case \"option3\":\r\n          setOption3(value);\r\n          break;\r\n        case \"option4\":\r\n          setOption4(value);\r\n          break;\r\n        default:\r\n          throw new Error(\"No branch selected in switch-statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4]\r\n  );\r\n\r\n  const printFile = useCallback(() => {\r\n    if (files[0]) {\r\n      return (\r\n        <div className={classes.imgWrapper}>\r\n          <img\r\n            alt=\"uploaded item\"\r\n            src={files[0].preview}\r\n            className={classes.img}\r\n            style={{ height: 148 }}\r\n          />\r\n          <div className={classes.floatButtonWrapper}>\r\n            <IconButton onClick={deleteItem}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Dropzone accept=\"image/png, image/jpeg\" onDrop={onDrop} fullHeight>\r\n        <span className={classes.uploadText}>\r\n          Click / Drop file <br /> here\r\n        </span>\r\n      </Dropzone>\r\n    );\r\n  }, [onDrop, files, classes, deleteItem]);\r\n\r\n  const inputs = \r\n    [\r\n      {\r\n        state: option1,\r\n        label: \"Option 1\",\r\n        stateName: \"option1\",\r\n      },\r\n      {\r\n        state: option2,\r\n        label: \"Option 2\",\r\n        stateName: \"option2\",\r\n      },\r\n      {\r\n        state: option3,\r\n        label: \"Option 3\",\r\n        stateName: \"option3\",\r\n      },\r\n      {\r\n        state: option4,\r\n        label: \"Option 4\",\r\n        stateName: \"option4\",\r\n      },\r\n    ];\r\n\r\n  return (\r\n    <Fragment>\r\n      {ImageCropper && (\r\n        <ImageCropperDialog\r\n          open={cropperFile ? true : false}\r\n          ImageCropper={ImageCropper}\r\n          src={cropperFile ? cropperFile.preview : \"\"}\r\n          onCrop={onCrop}\r\n          onClose={onCropperClose}\r\n          aspectRatio={4 / 3}\r\n        />\r\n      )}\r\n      <Typography paragraph variant=\"h6\">\r\n        Upload Image\r\n      </Typography>\r\n      <Box mb={2}>\r\n        {EmojiTextArea && (\r\n          <EmojiTextArea\r\n            inputClassName={classes.emojiTextArea}\r\n            maxCharacters={2200}\r\n            rightContent={printFile()}\r\n            emojiSet=\"google\"\r\n          />\r\n        )}\r\n      </Box>\r\n      <Typography paragraph variant=\"h6\">\r\n        Options\r\n      </Typography>\r\n      <List disablePadding>\r\n        <Bordered disableVerticalPadding disableBorderRadius>\r\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\r\n            <ListItemText>\r\n              <Typography variant=\"body2\">Upload at</Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              {DateTimePicker && (\r\n                <DateTimePicker\r\n                  value={uploadAt}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                  onChange={onChangeUploadAt}\r\n                  disablePast\r\n                />\r\n              )}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          {inputs.map((element, index) => (\r\n            <ListItem\r\n              className=\"listItemLeftPadding\"\r\n              disableGutters\r\n              divider={index !== inputs.length - 1}\r\n              key={index}\r\n            >\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">{element.label}</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction>\r\n                  <Select\r\n                    value={element.state}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name={element.stateName}\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {inputOptions.map((innerElement) => (\r\n                      <MenuItem value={innerElement} key={innerElement}>\r\n                        {innerElement}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          ))}\r\n        </Bordered>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPostOptions.propTypes = {\r\n  onEmojiTextareaChange: PropTypes.func,\r\n  DateTimePicker: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object,\r\n  cropperFile: PropTypes.object,\r\n  onCrop: PropTypes.func,\r\n  onCropperClose: PropTypes.func,\r\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteItem: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  value: PropTypes.string,\r\n  characters: PropTypes.number,\r\n  uploadAt: PropTypes.instanceOf(Date),\r\n  onChangeUploadAt: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport AddPostOptions from \"./AddPostOptions\";\r\n\r\nfunction AddPost(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    Dropzone,\r\n    EmojiTextArea,\r\n    DateTimePicker,\r\n    ImageCropper,\r\n    onClose,\r\n  } = props;\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadAt, setUploadAt] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  const [cropperFile, setCropperFile] = useState(null);\r\n\r\n  const acceptDrop = useCallback(\r\n    (file) => {\r\n      setFiles([file]);\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles, rejectedFiles) => {\r\n      if (acceptedFiles.length + rejectedFiles.length > 1) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"You cannot upload more than one file at once\",\r\n        });\r\n      } else if (acceptedFiles.length === 0) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"The file you wanted to upload isn't an image\",\r\n        });\r\n      } else if (acceptedFiles.length === 1) {\r\n        const file = acceptedFiles[0];\r\n        file.preview = URL.createObjectURL(file);\r\n        file.key = new Date().getTime();\r\n        setCropperFile(file);\r\n      }\r\n    },\r\n    [pushMessageToSnackbar, setCropperFile]\r\n  );\r\n\r\n  const onCropperClose = useCallback(() => {\r\n    setCropperFile(null);\r\n  }, [setCropperFile]);\r\n\r\n  const deleteItem = useCallback(() => {\r\n    setCropperFile(null);\r\n    setFiles([]);\r\n  }, [setCropperFile, setFiles]);\r\n\r\n  const onCrop = useCallback(\r\n    (dataUrl) => {\r\n      const file = { ...cropperFile };\r\n      file.preview = dataUrl;\r\n      acceptDrop(file);\r\n      setCropperFile(null);\r\n    },\r\n    [acceptDrop, cropperFile, setCropperFile]\r\n  );\r\n\r\n  const handleUpload = useCallback(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been uploaded\",\r\n      });\r\n      onClose();\r\n    }, 1500);\r\n  }, [setLoading, onClose, pushMessageToSnackbar]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ActionPaper\r\n        helpPadding\r\n        maxWidth=\"md\"\r\n        content={\r\n          <AddPostOptions\r\n            EmojiTextArea={EmojiTextArea}\r\n            Dropzone={Dropzone}\r\n            files={files}\r\n            onDrop={onDrop}\r\n            deleteItem={deleteItem}\r\n            DateTimePicker={DateTimePicker}\r\n            uploadAt={uploadAt}\r\n            onChangeUploadAt={setUploadAt}\r\n            onCrop={onCrop}\r\n            ImageCropper={ImageCropper}\r\n            cropperFile={cropperFile}\r\n            onCropperClose={onCropperClose}\r\n          />\r\n        }\r\n        actions={\r\n          <Fragment>\r\n            <Box mr={1}>\r\n              <Button onClick={onClose} disabled={loading}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n            <Button\r\n              onClick={handleUpload}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={files.length === 0 || loading}\r\n            >\r\n              Upload {loading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPost.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  Dropzone: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostContent from \"./PostContent\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction Posts(props) {\r\n  const {\r\n    selectPosts,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    setPosts,\r\n  } = props;\r\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\r\n\r\n  const openAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(true);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  const closeAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(false);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  useEffect(() => {\r\n    selectPosts();\r\n  }, [selectPosts]);\r\n\r\n  if (isAddPostPaperOpen) {\r\n    return <AddPost\r\n      onClose={closeAddPostModal}\r\n      EmojiTextArea={EmojiTextArea}\r\n      ImageCropper={ImageCropper}\r\n      Dropzone={Dropzone}\r\n      DateTimePicker={DateTimePicker}\r\n      pushMessageToSnackbar={pushMessageToSnackbar}\r\n    />\r\n  }\r\n  return <PostContent\r\n    openAddPostModal={openAddPostModal}\r\n    posts={posts}\r\n    setPosts={setPosts}\r\n    pushMessageToSnackbar={pushMessageToSnackbar}\r\n  />\r\n}\r\n\r\nPosts.propTypes = {\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  selectPosts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chip } from \"@material-ui/core\";\r\nimport shadeColor from \"../functions/shadeColor\";\r\n\r\nfunction ColorfulChip(props) {\r\n  const { color, label, className } = props;\r\n  return (\r\n    <Chip\r\n      style={{\r\n        color: color,\r\n        backgroundColor: shadeColor(color, 0.7)\r\n      }}\r\n      label={label}\r\n      className={className ? className : null}\r\n    />\r\n  );\r\n}\r\n\r\nColorfulChip.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n};\r\n\r\nexport default ColorfulChip;\r\n","function unixToDateString(unix) {\r\n  const date = new Date(unix * 1000);\r\n  return (\r\n    `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`\r\n  );\r\n}\r\n\r\nexport default unixToDateString;\r\n","function currencyPrettyPrint(cents) {\r\n  const dollars = cents / 100;\r\n  return dollars.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport default currencyPrettyPrint;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TablePagination,\r\n  TableRow,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\r\nimport ColorfulChip from \"../../../shared/components/ColorfulChip\";\r\nimport unixToDateString from \"../../../shared/functions/unixToDateString\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = theme => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    width: \"100%\"\r\n  },\r\n  blackBackground: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  contentWrapper: {\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: theme.spacing(2)\r\n    },\r\n    width: \"100%\"\r\n  },\r\n  dBlock: {\r\n    display: \"block !important\"\r\n  },\r\n  dNone: {\r\n    display: \"none !important\"\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nconst rows = [\r\n  {\r\n    id: \"description\",\r\n    numeric: false,\r\n    label: \"Action\"\r\n  },\r\n  {\r\n    id: \"balanceChange\",\r\n    numeric: false,\r\n    label: \"Balance change\"\r\n  },\r\n  {\r\n    id: \"date\",\r\n    numeric: false,\r\n    label: \"Date\"\r\n  },\r\n  {\r\n    id: \"paidUntil\",\r\n    numeric: false,\r\n    label: \"Paid until\"\r\n  }\r\n];\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction SubscriptionTable(props) {\r\n  const { transactions, theme, classes } = props;\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  if (transactions.length > 0) {\r\n    return (\r\n      <div className={classes.tableWrapper}>\r\n        <Table aria-labelledby=\"tableTitle\">\r\n          <EnhancedTableHead rowCount={transactions.length} rows={rows} />\r\n          <TableBody>\r\n            {transactions\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((transaction, index) => (\r\n                <TableRow hover tabIndex={-1} key={index}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.firstData}\r\n                  >\r\n                    {transaction.description}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {transaction.balanceChange > 0 ? (\r\n                      <ColorfulChip\r\n                        label={`+${currencyPrettyPrint(\r\n                          transaction.balanceChange\r\n                        )}`}\r\n                        color={theme.palette.secondary.main}\r\n                      />\r\n                    ) : (\r\n                      <ColorfulChip\r\n                        label={currencyPrettyPrint(transaction.balanceChange)}\r\n                        color={theme.palette.error.dark}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {unixToDateString(transaction.timestamp)}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {transaction.paidUntil\r\n                      ? unixToDateString(transaction.paidUntil)\r\n                      : \"\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={transactions.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"Previous Page\"\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"Next Page\"\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          classes={{\r\n            select: classes.dNone,\r\n            selectIcon: classes.dNone,\r\n            actions: transactions.length > 0 ? classes.dBlock : classes.dNone,\r\n            caption: transactions.length > 0 ? classes.dBlock : classes.dNone\r\n          }}\r\n          labelRowsPerPage=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.contentWrapper}>\r\n      <HighlightedInformation>\r\n        No transactions received yet.\r\n      </HighlightedInformation>\r\n    </div>\r\n  );\r\n}\r\n\r\nSubscriptionTable.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SubscriptionTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ListItemText, Button, Toolbar, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    justifyContent: \"space-between\"\r\n  }\r\n};\r\n\r\nfunction SubscriptionInfo(props) {\r\n  const { classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <ListItemText primary=\"Status\" secondary=\"Premium Account\" />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={openAddBalanceDialog}\r\n        disableElevation\r\n      >\r\n        Add Balance\r\n      </Button>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nSubscriptionInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SubscriptionInfo);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Divider, Paper, withStyles } from \"@material-ui/core\";\r\nimport SubscriptionTable from \"./SubscriptionTable\";\r\nimport SubscriptionInfo from \"./SubscriptionInfo\";\r\n\r\nconst styles = {\r\n  divider: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.26)\"\r\n  }\r\n};\r\n\r\nfunction Subscription(props) {\r\n  const {\r\n    transactions,\r\n    classes,\r\n    openAddBalanceDialog,\r\n    selectSubscription\r\n  } = props;\r\n\r\n  useEffect(selectSubscription, [selectSubscription]);\r\n\r\n  return (\r\n    <Paper>\r\n      <List disablePadding>\r\n        <SubscriptionInfo openAddBalanceDialog={openAddBalanceDialog} />\r\n        <Divider className={classes.divider} />\r\n        <SubscriptionTable transactions={transactions} />\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSubscription.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Subscription);\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Posts from \"./posts/Posts\";\r\nimport Subscription from \"./subscription/Subscription\";\r\nimport PropsRoute from \"../../shared/components/PropsRoute\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Routing(props) {\r\n  const {\r\n    classes,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    transactions,\r\n    toggleAccountActivation,\r\n    CardChart,\r\n    statistics,\r\n    targets,\r\n    setTargets,\r\n    setPosts,\r\n    isAccountActivated,\r\n    selectDashboard,\r\n    selectPosts,\r\n    selectSubscription,\r\n    openAddBalanceDialog,\r\n  } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Switch>\r\n        <PropsRoute\r\n          path=\"/c/posts\"\r\n          component={Posts}\r\n          EmojiTextArea={EmojiTextArea}\r\n          ImageCropper={ImageCropper}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          posts={posts}\r\n          setPosts={setPosts}\r\n          selectPosts={selectPosts}\r\n        />\r\n        <PropsRoute\r\n          path=\"/c/subscription\"\r\n          component={Subscription}\r\n          transactions={transactions}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n        />\r\n        <PropsRoute\r\n          path=\"\"\r\n          component={Dashboard}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          CardChart={CardChart}\r\n          statistics={statistics}\r\n          targets={targets}\r\n          setTargets={setTargets}\r\n          isAccountActivated={isAccountActivated}\r\n          selectDashboard={selectDashboard}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRouting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  setTargets: PropTypes.func.isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n  selectPosts: PropTypes.func.isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport formatDistance from \"date-fns/formatDistance\";\r\n\r\nfunction MessageListItem(props) {\r\n  const { message, divider } = props;\r\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\r\n\r\n  const handleError = useCallback(() => {\r\n    setHasErrorOccurred(true);\r\n  }, [setHasErrorOccurred]);\r\n\r\n  return (\r\n    <ListItem divider={divider}>\r\n      <ListItemAvatar>\r\n        {hasErrorOccurred ? (\r\n          <ErrorIcon color=\"secondary\" />\r\n        ) : (\r\n          <Avatar\r\n            src={hasErrorOccurred ? null : message.src}\r\n            onError={handleError}\r\n          />\r\n        )}\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={message.text}\r\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nMessageListItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  divider: PropTypes.bool,\r\n};\r\n\r\nexport default MessageListItem;\r\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  AppBar,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport MessageListItem from \"./MessageListItem\";\r\n\r\nconst styles = (theme) => ({\r\n  tabContainer: {\r\n    overflowY: \"auto\",\r\n    maxHeight: 350,\r\n  },\r\n  popoverPaper: {\r\n    width: \"100%\",\r\n    maxWidth: 350,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 270,\r\n    },\r\n  },\r\n  divider: {\r\n    marginTop: -2,\r\n  },\r\n  noShadow: {\r\n    boxShadow: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction MessagePopperButton(props) {\r\n  const { classes, messages } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const handleClickAway = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleClick}\r\n        buttonRef={anchorEl}\r\n        aria-label=\"Open Messages\"\r\n        aria-describedby={id}\r\n        color=\"primary\"\r\n      >\r\n        <MessageIcon />\r\n      </IconButton>\r\n      <Popover\r\n        disableScrollLock\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        classes={{ paper: classes.popoverPaper }}\r\n        onClose={handleClickAway}\r\n      >\r\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\r\n          <Box pt={1} pl={2} pb={1} pr={1}>\r\n            <Typography variant=\"subtitle1\">Messages</Typography>\r\n          </Box>\r\n          <Divider className={classes.divider} />\r\n        </AppBar>\r\n        <List dense className={classes.tabContainer}>\r\n          {messages.length === 0 ? (\r\n            <ListItem>\r\n              <ListItemText>\r\n                You haven&apos;t received any messages yet.\r\n              </ListItemText>\r\n            </ListItem>\r\n          ) : (\r\n            messages.map((element, index) => (\r\n              <MessageListItem\r\n                key={index}\r\n                message={element}\r\n                divider={index !== messages.length - 1}\r\n              />\r\n            ))\r\n          )}\r\n        </List>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMessagePopperButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  Toolbar,\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    minWidth: drawerWidth\r\n  }\r\n};\r\n\r\nfunction SideDrawer(props) {\r\n  const { classes, onClose, open } = props;\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} variant=\"temporary\" onClose={onClose}>\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <Box\r\n          pl={3}\r\n          pr={3}\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h6\">A Sidedrawer</Typography>\r\n          <IconButton\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            aria-label=\"Close Sidedrawer\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SideDrawer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { OutlinedInput, withStyles } from \"@material-ui/core\";\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = {\r\n  input: { padding: \"0px 9px\", cursor: \"pointer\" },\r\n  outlinedInput: {\r\n    width: 90,\r\n    height: 40,\r\n    cursor: \"pointer\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction Balance(props) {\r\n  const { balance, classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <OutlinedInput\r\n        value={balance === null ? \"\" : currencyPrettyPrint(balance)}\r\n        className={classes.outlinedInput}\r\n        classes={{ input: classes.input }}\r\n        readOnly\r\n        labelWidth={0}\r\n        onClick={openAddBalanceDialog}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Balance);\r\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Avatar,\r\n  Drawer,\r\n  List,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Hidden,\r\n  Tooltip,\r\n  Box,\r\n  withStyles,\r\n  isWidthUp,\r\n  withWidth,\r\n} from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport MessagePopperButton from \"./MessagePopperButton\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Balance from \"./Balance\";\r\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    boxShadow: theme.shadows[6],\r\n    backgroundColor: theme.palette.common.white,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  appBarToolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4),\r\n    },\r\n  },\r\n  accountAvatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    height: 24,\r\n    width: 24,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: theme.spacing(1.5),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    height: \"100%vh\",\r\n    whiteSpace: \"nowrap\",\r\n    border: 0,\r\n    width: theme.spacing(7),\r\n    overflowX: \"hidden\",\r\n    marginTop: theme.spacing(8),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n  smBordered: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      borderRadius: \"50% !important\",\r\n    },\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  iconListItem: {\r\n    width: \"auto\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: 11,\r\n    paddingBottom: 11,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mobileItemSelected: {\r\n    backgroundColor: `${theme.palette.primary.main} !important`,\r\n  },\r\n  brandText: {\r\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\r\n    fontWeight: 400,\r\n  },\r\n  username: {\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  justifyCenter: {\r\n    justifyContent: \"center\",\r\n  },\r\n  permanentDrawerListItem: {\r\n    justifyContent: \"center\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction NavBar(props) {\r\n  const { selectedTab, messages, classes, width, openAddBalanceDialog } = props;\r\n  // Will be use to make website more accessible by screen readers\r\n  const links = useRef([]);\r\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\r\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\r\n\r\n  const openMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(true);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const closeMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(false);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const openDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(true);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const closeDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(false);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const menuItems = [\r\n    {\r\n      link: \"/c/dashboard\",\r\n      name: \"Dashboard\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <DashboardIcon\r\n            className={\r\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <DashboardIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/posts\",\r\n      name: \"Posts\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <ImageIcon\r\n            className={\r\n              selectedTab === \"Posts\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <ImageIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/subscription\",\r\n      name: \"Subscription\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <AccountBalanceIcon\r\n            className={\r\n              selectedTab === \"Subscription\"\r\n                ? classes.textPrimary\r\n                : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <AccountBalanceIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/\",\r\n      name: \"Logout\",\r\n      icon: {\r\n        desktop: (\r\n          <PowerSettingsNewIcon className=\"text-white\" fontSize=\"small\" />\r\n        ),\r\n        mobile: <PowerSettingsNewIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar className={classes.appBarToolbar}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Box mr={1}>\r\n                <IconButton\r\n                  aria-label=\"Open Navigation\"\r\n                  onClick={openMobileDrawer}\r\n                  color=\"primary\"\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n                color=\"primary\"\r\n              >\r\n                Wa\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n                color=\"secondary\"\r\n              >\r\n                Ver\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            {isWidthUp(\"sm\", width) && (\r\n              <Box mr={3}>\r\n                <Balance\r\n                  balance={2573}\r\n                  openAddBalanceDialog={openAddBalanceDialog}\r\n                />\r\n              </Box>\r\n            )}\r\n            <MessagePopperButton messages={messages} />\r\n            <ListItem\r\n              disableGutters\r\n              className={classNames(classes.iconListItem, classes.smBordered)}\r\n            >\r\n              <Avatar\r\n                alt=\"profile picture\"\r\n                src={`${process.env.PUBLIC_URL}/images/logged_in/profilePicture.jpg`}\r\n                className={classNames(classes.accountAvatar)}\r\n              />\r\n              {isWidthUp(\"sm\", width) && (\r\n                <ListItemText\r\n                  className={classes.username}\r\n                  primary={\r\n                    <Typography color=\"textPrimary\">Username</Typography>\r\n                  }\r\n                />\r\n              )}\r\n            </ListItem>\r\n          </Box>\r\n          <IconButton\r\n            onClick={openDrawer}\r\n            color=\"primary\"\r\n            aria-label=\"Open Sidedrawer\"\r\n          >\r\n            <SupervisorAccountIcon />\r\n          </IconButton>\r\n          <SideDrawer open={isSideDrawerOpen} onClose={closeDrawer} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden xsDown>\r\n        <Drawer //  both drawers can be combined into one for performance\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          open={false}\r\n        >\r\n          <List>\r\n            {menuItems.map((element, index) => (\r\n              <Link\r\n                to={element.link}\r\n                className={classes.menuLink}\r\n                onClick={element.onClick}\r\n                key={index}\r\n                ref={(node) => {\r\n                  links.current[index] = node;\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={element.name}\r\n                  placement=\"right\"\r\n                  key={element.name}\r\n                >\r\n                  <ListItem\r\n                    selected={selectedTab === element.name}\r\n                    button\r\n                    divider={index !== menuItems.length - 1}\r\n                    className={classes.permanentDrawerListItem}\r\n                    onClick={() => {\r\n                      links.current[index].click();\r\n                    }}\r\n                    aria-label={\r\n                      element.name === \"Logout\"\r\n                        ? \"Logout\"\r\n                        : `Go to ${element.name}`\r\n                    }\r\n                  >\r\n                    <ListItemIcon className={classes.justifyCenter}>\r\n                      {element.icon.desktop}\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                </Tooltip>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </Hidden>\r\n      <NavigationDrawer\r\n        menuItems={menuItems.map((element) => ({\r\n          link: element.link,\r\n          name: element.name,\r\n          icon: element.icon.mobile,\r\n          onClick: element.onClick,\r\n        }))}\r\n        anchor=\"left\"\r\n        open={isMobileOpen}\r\n        selectedItem={selectedTab}\r\n        onClose={closeMobileDrawer}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\r\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nfunction ConsecutiveSnackbars(props) {\r\n  const { classes, getPushMessageFromChild } = props;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState({});\r\n  const queue = useRef([]);\r\n\r\n  const processQueue = useCallback(() => {\r\n    if (queue.current.length > 0) {\r\n      setMessageInfo(queue.current.shift());\r\n      setIsOpen(true);\r\n    }\r\n  }, [setMessageInfo, setIsOpen, queue]);\r\n\r\n  const handleClose = useCallback((_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const pushMessage = useCallback(message => {\r\n    queue.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n    if (isOpen) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setIsOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  }, [queue, isOpen, setIsOpen, processQueue]);\r\n\r\n  useEffect(() => {\r\n    getPushMessageFromChild(pushMessage);\r\n  }, [getPushMessageFromChild, pushMessage]);\r\n\r\n  return (\r\n    <Snackbar\r\n      disableWindowBlurListener\r\n      key={messageInfo.key}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={isOpen}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      onExited={processQueue}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root,\r\n        },\r\n      }}\r\n      message={\r\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\r\n      }\r\n    />\r\n  );\r\n\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n  getPushMessageFromChild: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\r\n","const data = [\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\r\n    name: \"Markus\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\r\n    name: \"David\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\r\n    name: \"Arold\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\r\n    name: \"Joanic\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\r\n    name: \"Sophia\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\r\n    name: \"Aaron\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\r\n    name: \"Steven\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\r\n    name: \"Felix\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\r\n    name: \"Vivien\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\r\n    name: \"Leonie\",\r\n  },\r\n];\r\n\r\nexport default data;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction LazyLoadAddBalanceDialog(props) {\r\n  const { open, onClose, onSuccess } = props;\r\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\r\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && !hasFetchedAddBalanceDialog) {\r\n      setHasFetchedAddBlanceDialog(true);\r\n      import(\"./AddBalanceDialog\").then(Component => {\r\n        setAddBalanceDialog(() => Component.default);\r\n      });\r\n    }\r\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {AddBalanceDialog && (\r\n        <AddBalanceDialog\r\n          open={open}\r\n          onClose={onClose}\r\n          onSuccess={onSuccess}\r\n        ></AddBalanceDialog>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\nLazyLoadAddBalanceDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LazyLoadAddBalanceDialog;\r\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Routing from \"./Routing\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\r\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\r\nimport persons from \"../dummy_data/persons\";\r\nimport LazyLoadAddBalanceDialog from \"./subscription/LazyLoadAddBalanceDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    marginLeft: theme.spacing(9),\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n});\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [selectedTab, setSelectedTab] = useState(null);\r\n  const [CardChart, setCardChart] = useState(null);\r\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\r\n  const [EmojiTextArea, setEmojiTextArea] = useState(null);\r\n  const [hasFetchedEmojiTextArea, setHasFetchedEmojiTextArea] = useState(false);\r\n  const [ImageCropper, setImageCropper] = useState(null);\r\n  const [hasFetchedImageCropper, setHasFetchedImageCropper] = useState(false);\r\n  const [Dropzone, setDropzone] = useState(null);\r\n  const [hasFetchedDropzone, setHasFetchedDropzone] = useState(false);\r\n  const [DateTimePicker, setDateTimePicker] = useState(null);\r\n  const [hasFetchedDateTimePicker, setHasFetchedDateTimePicker] = useState(\r\n    false\r\n  );\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [statistics, setStatistics] = useState({ views: [], profit: [] });\r\n  const [posts, setPosts] = useState([]);\r\n  const [targets, setTargets] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isAccountActivated, setIsAccountActivated] = useState(false);\r\n  const [isAddBalanceDialogOpen, setIsAddBalanceDialogOpen] = useState(false);\r\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\r\n\r\n  const fetchRandomTargets = useCallback(() => {\r\n    const targets = [];\r\n    for (let i = 0; i < 35; i += 1) {\r\n      const randomPerson = persons[Math.floor(Math.random() * persons.length)];\r\n      const target = {\r\n        id: i,\r\n        number1: Math.floor(Math.random() * 251),\r\n        number2: Math.floor(Math.random() * 251),\r\n        number3: Math.floor(Math.random() * 251),\r\n        number4: Math.floor(Math.random() * 251),\r\n        name: randomPerson.name,\r\n        profilePicUrl: randomPerson.src,\r\n        isActivated: Math.round(Math.random()) ? true : false,\r\n      };\r\n      targets.push(target);\r\n    }\r\n    setTargets(targets);\r\n  }, [setTargets]);\r\n\r\n  const openAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(true);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const closeAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const onPaymentSuccess = useCallback(() => {\r\n    pushMessageToSnackbar({\r\n      text: \"Your balance has been updated.\",\r\n    });\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [pushMessageToSnackbar, setIsAddBalanceDialogOpen]);\r\n\r\n  const fetchRandomStatistics = useCallback(() => {\r\n    const statistics = { profit: [], views: [] };\r\n    const iterations = 300;\r\n    const oneYearSeconds = 60 * 60 * 24 * 365;\r\n    let curProfit = Math.round(3000 + Math.random() * 1000);\r\n    let curViews = Math.round(3000 + Math.random() * 1000);\r\n    let curUnix = Math.round(new Date().getTime() / 1000) - oneYearSeconds;\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      curUnix += Math.round(oneYearSeconds / iterations);\r\n      curProfit += Math.round((Math.random() * 2 - 1) * 10);\r\n      curViews += Math.round((Math.random() * 2 - 1) * 10);\r\n      statistics.profit.push({\r\n        value: curProfit,\r\n        timestamp: curUnix,\r\n      });\r\n      statistics.views.push({\r\n        value: curViews,\r\n        timestamp: curUnix,\r\n      });\r\n    }\r\n    setStatistics(statistics);\r\n  }, [setStatistics]);\r\n\r\n  const fetchRandomTransactions = useCallback(() => {\r\n    const transactions = [];\r\n    const iterations = 32;\r\n    const oneMonthSeconds = Math.round(60 * 60 * 24 * 30.5);\r\n    const transactionTemplates = [\r\n      {\r\n        description: \"Starter subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -1499,\r\n      },\r\n      {\r\n        description: \"Premium subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -2999,\r\n      },\r\n      {\r\n        description: \"Business subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -4999,\r\n      },\r\n      {\r\n        description: \"Tycoon subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -9999,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 2000,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 5000,\r\n      },\r\n    ];\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneMonthSeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const randomTransactionTemplate =\r\n        transactionTemplates[\r\n          Math.floor(Math.random() * transactionTemplates.length)\r\n        ];\r\n      const transaction = {\r\n        id: i,\r\n        description: randomTransactionTemplate.description,\r\n        balanceChange: randomTransactionTemplate.balanceChange,\r\n        paidUntil: curUnix + oneMonthSeconds,\r\n        timestamp: curUnix,\r\n      };\r\n      curUnix += oneMonthSeconds;\r\n      transactions.push(transaction);\r\n    }\r\n    transactions.reverse();\r\n    setTransactions(transactions);\r\n  }, [setTransactions]);\r\n\r\n  const fetchRandomMessages = useCallback(() => {\r\n    shuffle(persons);\r\n    const messages = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const message = {\r\n        id: i,\r\n        src: person.src,\r\n        date: curUnix,\r\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      messages.push(message);\r\n    }\r\n    messages.reverse();\r\n    setMessages(messages);\r\n  }, [setMessages]);\r\n\r\n  const fetchRandomPosts = useCallback(() => {\r\n    shuffle(persons);\r\n    const posts = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const post = {\r\n        id: i,\r\n        src: person.src,\r\n        timestamp: curUnix,\r\n        name: person.name,\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      posts.push(post);\r\n    }\r\n    posts.reverse();\r\n    setPosts(posts);\r\n  }, [setPosts]);\r\n\r\n  const toggleAccountActivation = useCallback(() => {\r\n    if (pushMessageToSnackbar) {\r\n      if (isAccountActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now deactivated.\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now activated.\",\r\n        });\r\n      }\r\n    }\r\n    setIsAccountActivated(!isAccountActivated);\r\n  }, [pushMessageToSnackbar, isAccountActivated, setIsAccountActivated]);\r\n\r\n  const selectDashboard = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Dashboard\";\r\n    setSelectedTab(\"Dashboard\");\r\n    if (!hasFetchedCardChart) {\r\n      setHasFetchedCardChart(true);\r\n      import(\"../../shared/components/CardChart\").then((Component) => {\r\n        setCardChart(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setCardChart,\r\n    hasFetchedCardChart,\r\n    setHasFetchedCardChart,\r\n  ]);\r\n\r\n  const selectPosts = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Posts\";\r\n    setSelectedTab(\"Posts\");\r\n    if (!hasFetchedEmojiTextArea) {\r\n      setHasFetchedEmojiTextArea(true);\r\n      import(\"../../shared/components/EmojiTextArea\").then((Component) => {\r\n        setEmojiTextArea(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedImageCropper) {\r\n      setHasFetchedImageCropper(true);\r\n      import(\"../../shared/components/ImageCropper\").then((Component) => {\r\n        setImageCropper(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDropzone) {\r\n      setHasFetchedDropzone(true);\r\n      import(\"../../shared/components/Dropzone\").then((Component) => {\r\n        setDropzone(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDateTimePicker) {\r\n      setHasFetchedDateTimePicker(true);\r\n      import(\"../../shared/components/DateTimePicker\").then((Component) => {\r\n        setDateTimePicker(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setEmojiTextArea,\r\n    setImageCropper,\r\n    setDropzone,\r\n    setDateTimePicker,\r\n    hasFetchedEmojiTextArea,\r\n    setHasFetchedEmojiTextArea,\r\n    hasFetchedImageCropper,\r\n    setHasFetchedImageCropper,\r\n    hasFetchedDropzone,\r\n    setHasFetchedDropzone,\r\n    hasFetchedDateTimePicker,\r\n    setHasFetchedDateTimePicker,\r\n  ]);\r\n\r\n  const selectSubscription = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Subscription\";\r\n    setSelectedTab(\"Subscription\");\r\n  }, [setSelectedTab]);\r\n\r\n  const getPushMessageFromChild = useCallback(\r\n    (pushMessage) => {\r\n      setPushMessageToSnackbar(() => pushMessage);\r\n    },\r\n    [setPushMessageToSnackbar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchRandomTargets();\r\n    fetchRandomStatistics();\r\n    fetchRandomTransactions();\r\n    fetchRandomMessages();\r\n    fetchRandomPosts();\r\n  }, [\r\n    fetchRandomTargets,\r\n    fetchRandomStatistics,\r\n    fetchRandomTransactions,\r\n    fetchRandomMessages,\r\n    fetchRandomPosts,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LazyLoadAddBalanceDialog\r\n        open={isAddBalanceDialogOpen}\r\n        onClose={closeAddBalanceDialog}\r\n        onSuccess={onPaymentSuccess}\r\n      />\r\n      <NavBar\r\n        selectedTab={selectedTab}\r\n        messages={messages}\r\n        openAddBalanceDialog={openAddBalanceDialog}\r\n      />\r\n      <ConsecutiveSnackbarMessages\r\n        getPushMessageFromChild={getPushMessageFromChild}\r\n      />\r\n      <main className={classNames(classes.main)}>\r\n        <Routing\r\n          isAccountActivated={isAccountActivated}\r\n          ImageCropper={ImageCropper}\r\n          EmojiTextArea={EmojiTextArea}\r\n          CardChart={CardChart}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          transactions={transactions}\r\n          statistics={statistics}\r\n          posts={posts}\r\n          targets={targets}\r\n          selectDashboard={selectDashboard}\r\n          selectPosts={selectPosts}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n          setTargets={setTargets}\r\n          setPosts={setPosts}\r\n        />\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Main));\r\n"],"sourceRoot":""}